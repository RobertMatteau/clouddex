# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-04 23:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('teambuilder', '0005_authgroup_authgrouppermissions_authpermission_authuser_authusergroups_authuseruserpermissions_django'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abilities',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'abilities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AbilityChangelog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ability_changelog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Berries',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('natural_gift_power', models.IntegerField(blank=True, null=True)),
                ('size', models.IntegerField()),
                ('max_harvest', models.IntegerField()),
                ('growth_time', models.IntegerField()),
                ('soil_dryness', models.IntegerField()),
                ('smoothness', models.IntegerField()),
            ],
            options={
                'db_table': 'berries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BerryFirmness',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'berry_firmness',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EggGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'egg_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvolutionChains',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'evolution_chains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvolutionTriggers',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'evolution_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genders',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'genders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Generations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'generations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GrowthRates',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=20)),
                ('formula', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'growth_rates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemCategories',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'item_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlags',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'item_flags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlingEffects',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'item_fling_effects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemPockets',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'item_pockets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=20)),
                ('cost', models.IntegerField()),
                ('fling_power', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('iso639', models.CharField(max_length=2)),
                ('iso3166', models.CharField(max_length=2)),
                ('identifier', models.CharField(max_length=16)),
                ('official', models.BooleanField()),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationAreas',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('game_index', models.IntegerField()),
                ('identifier', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'location_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveBattleStyles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'move_battle_styles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveDamageClasses',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'move_damage_classes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveEffectChangelog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'move_effect_changelog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveEffects',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'move_effects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveFlags',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'move_flags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveMetaAilments',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=24, unique=True)),
            ],
            options={
                'db_table': 'move_meta_ailments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveMetaCategories',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'db_table': 'move_meta_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moves',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=24)),
                ('power', models.SmallIntegerField()),
                ('pp', models.SmallIntegerField(blank=True, null=True)),
                ('accuracy', models.SmallIntegerField(blank=True, null=True)),
                ('priority', models.SmallIntegerField()),
                ('effect_chance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'moves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveTargets',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'move_targets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Natures',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'natures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PalParkAreas',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'pal_park_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokeathlonStats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'pokeathlon_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pokedexes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
                ('is_main_series', models.BooleanField()),
            ],
            options={
                'db_table': 'pokedexes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonAbilities',
            fields=[
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokemon')),
                ('is_hidden', models.BooleanField()),
                ('slot', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'pokemon_abilities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonColors',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'pokemon_colors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonEvolution',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('minimum_level', models.IntegerField(blank=True, null=True)),
                ('time_of_day', models.CharField(blank=True, max_length=5, null=True)),
                ('minimum_happiness', models.IntegerField(blank=True, null=True)),
                ('minimum_beauty', models.IntegerField(blank=True, null=True)),
                ('relative_physical_stats', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pokemon_evolution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonForms',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('form_identifier', models.CharField(blank=True, max_length=16, null=True)),
                ('is_default', models.BooleanField()),
                ('is_battle_only', models.BooleanField()),
                ('form_order', models.IntegerField()),
                ('order', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_forms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonHabitats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'pokemon_habitats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonMoveMethods',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'pokemon_move_methods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonShapes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'pokemon_shapes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonSpecies',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=20)),
                ('gender_rate', models.IntegerField()),
                ('capture_rate', models.IntegerField()),
                ('base_happiness', models.IntegerField()),
                ('is_baby', models.BooleanField()),
                ('hatch_counter', models.IntegerField()),
                ('has_gender_differences', models.BooleanField()),
                ('forms_switchable', models.BooleanField()),
                ('order', models.IntegerField()),
                ('conquest_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pokemon_species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonTypes',
            fields=[
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokemon')),
                ('slot', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'pokemon_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatHints',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('gene_mod_5', models.IntegerField()),
            ],
            options={
                'db_table': 'stat_hints',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=16)),
                ('is_battle_only', models.BooleanField()),
                ('game_index', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperContestEffects',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('appeal', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'super_contest_effects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'version_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Versions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'versions',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='pokemon',
            options={'managed': False},
        ),
        migrations.CreateModel(
            name='AbilityChangelogProse',
            fields=[
                ('ability_changelog', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.AbilityChangelog')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('effect', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ability_changelog_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AbilityFlavorText',
            fields=[
                ('ability', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Abilities')),
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('flavor_text', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'ability_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AbilityNames',
            fields=[
                ('ability', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Abilities')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'ability_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AbilityProse',
            fields=[
                ('ability', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Abilities')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('effect', models.CharField(blank=True, max_length=5120, null=True)),
                ('short_effect', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'ability_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BerryFirmnessNames',
            fields=[
                ('berry_firmness', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.BerryFirmness')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'berry_firmness_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BerryFlavors',
            fields=[
                ('berry', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Berries')),
                ('flavor', models.IntegerField()),
            ],
            options={
                'db_table': 'berry_flavors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EggGroupProse',
            fields=[
                ('egg_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.EggGroups')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'egg_group_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvolutionTriggerProse',
            fields=[
                ('evolution_trigger', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.EvolutionTriggers')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'evolution_trigger_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('growth_rate', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.GrowthRates')),
                ('level', models.IntegerField(primary_key=True)),
                ('experience', models.IntegerField()),
            ],
            options={
                'db_table': 'experience',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenerationNames',
            fields=[
                ('generation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Generations')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'generation_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GrowthRateProse',
            fields=[
                ('growth_rate', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.GrowthRates')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'growth_rate_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemCategoryProse',
            fields=[
                ('item_category', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.ItemCategories')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'item_category_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlagMap',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Items')),
                ('item_flag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.ItemFlags')),
            ],
            options={
                'db_table': 'item_flag_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlagProse',
            fields=[
                ('item_flag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.ItemFlags')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=24, null=True)),
                ('description', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'item_flag_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlavorSummaries',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Items')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('flavor_summary', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'item_flavor_summaries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlavorText',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Items')),
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('flavor_text', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'item_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFlingEffectProse',
            fields=[
                ('item_fling_effect', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.ItemFlingEffects')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('effect', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'item_fling_effect_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGameIndices',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Items')),
                ('generation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Generations')),
                ('game_index', models.IntegerField()),
            ],
            options={
                'db_table': 'item_game_indices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemNames',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Items')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'item_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemPocketNames',
            fields=[
                ('item_pocket', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.ItemPockets')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'item_pocket_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemProse',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Items')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('short_effect', models.CharField(blank=True, max_length=256, null=True)),
                ('effect', models.CharField(blank=True, max_length=5120, null=True)),
            ],
            options={
                'db_table': 'item_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageNames',
            fields=[
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='+', serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'language_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationAreaProse',
            fields=[
                ('location_area', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.LocationAreas')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'location_area_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationGameIndices',
            fields=[
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Locations')),
                ('generation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Generations')),
                ('game_index', models.IntegerField(primary_key=True)),
            ],
            options={
                'db_table': 'location_game_indices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationNames',
            fields=[
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Locations')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'location_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Machines',
            fields=[
                ('machine_number', models.IntegerField(primary_key=True, serialize=False)),
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
            ],
            options={
                'db_table': 'machines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveBattleStyleProse',
            fields=[
                ('move_battle_style', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveBattleStyles')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'move_battle_style_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveChangelog',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Moves')),
                ('changed_in_version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('power', models.SmallIntegerField(blank=True, null=True)),
                ('pp', models.SmallIntegerField(blank=True, null=True)),
                ('accuracy', models.SmallIntegerField(blank=True, null=True)),
                ('effect_chance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'move_changelog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveDamageClassProse',
            fields=[
                ('move_damage_class', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveDamageClasses')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=16, null=True)),
                ('description', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'move_damage_class_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveEffectChangelogProse',
            fields=[
                ('move_effect_changelog', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveEffectChangelog')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('effect', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'move_effect_changelog_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveEffectProse',
            fields=[
                ('move_effect', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveEffects')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('short_effect', models.CharField(blank=True, max_length=256, null=True)),
                ('effect', models.CharField(blank=True, max_length=5120, null=True)),
            ],
            options={
                'db_table': 'move_effect_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveFlagMap',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Moves')),
                ('move_flag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.MoveFlags')),
            ],
            options={
                'db_table': 'move_flag_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveFlagProse',
            fields=[
                ('move_flag', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveFlags')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'move_flag_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveFlavorSummaries',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Moves')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('flavor_summary', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'move_flavor_summaries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveFlavorText',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Moves')),
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('flavor_text', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'move_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveMeta',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Moves')),
                ('min_hits', models.IntegerField(blank=True, null=True)),
                ('max_hits', models.IntegerField(blank=True, null=True)),
                ('min_turns', models.IntegerField(blank=True, null=True)),
                ('max_turns', models.IntegerField(blank=True, null=True)),
                ('recoil', models.IntegerField()),
                ('healing', models.IntegerField()),
                ('crit_rate', models.IntegerField()),
                ('ailment_chance', models.IntegerField()),
                ('flinch_chance', models.IntegerField()),
                ('stat_chance', models.IntegerField()),
            ],
            options={
                'db_table': 'move_meta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveMetaAilmentNames',
            fields=[
                ('move_meta_ailment', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveMetaAilments')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'move_meta_ailment_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveMetaCategoryProse',
            fields=[
                ('move_meta_category', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveMetaCategories')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'move_meta_category_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveMetaStatChanges',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Moves')),
                ('stat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Stats')),
                ('change', models.IntegerField()),
            ],
            options={
                'db_table': 'move_meta_stat_changes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveNames',
            fields=[
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Moves')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'move_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoveTargetProse',
            fields=[
                ('move_target', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.MoveTargets')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'move_target_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NatureBattleStylePreferences',
            fields=[
                ('nature', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Natures')),
                ('move_battle_style', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.MoveBattleStyles')),
                ('low_hp_preference', models.IntegerField()),
                ('high_hp_preference', models.IntegerField()),
            ],
            options={
                'db_table': 'nature_battle_style_preferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NatureNames',
            fields=[
                ('nature', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Natures')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'nature_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NaturePokeathlonStats',
            fields=[
                ('nature', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Natures')),
                ('pokeathlon_stat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokeathlonStats')),
                ('max_change', models.IntegerField()),
            ],
            options={
                'db_table': 'nature_pokeathlon_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PalPark',
            fields=[
                ('species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonSpecies')),
                ('base_score', models.IntegerField()),
                ('rate', models.IntegerField()),
            ],
            options={
                'db_table': 'pal_park',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PalParkAreaNames',
            fields=[
                ('pal_park_area', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PalParkAreas')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'pal_park_area_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokeathlonStatNames',
            fields=[
                ('pokeathlon_stat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokeathlonStats')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'pokeathlon_stat_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokedexProse',
            fields=[
                ('pokedex', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokedexes')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=16, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'pokedex_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonColorNames',
            fields=[
                ('pokemon_color', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonColors')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'pokemon_color_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonDexNumbers',
            fields=[
                ('species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonSpecies')),
                ('pokedex', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokedexes')),
                ('pokedex_number', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_dex_numbers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonEggGroups',
            fields=[
                ('species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonSpecies')),
                ('egg_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.EggGroups')),
            ],
            options={
                'db_table': 'pokemon_egg_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonFormGenerations',
            fields=[
                ('pokemon_form', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonForms')),
                ('generation', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Generations')),
                ('game_index', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_form_generations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonFormNames',
            fields=[
                ('pokemon_form', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonForms')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('form_name', models.CharField(blank=True, max_length=32, null=True)),
                ('pokemon_name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'pokemon_form_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonFormPokeathlonStats',
            fields=[
                ('pokemon_form', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonForms')),
                ('pokeathlon_stat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokeathlonStats')),
                ('minimum_stat', models.IntegerField()),
                ('base_stat', models.IntegerField()),
                ('maximum_stat', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_form_pokeathlon_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonGameIndices',
            fields=[
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokemon')),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Versions')),
                ('game_index', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_game_indices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonHabitatNames',
            fields=[
                ('pokemon_habitat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonHabitats')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'pokemon_habitat_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonItems',
            fields=[
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokemon')),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Versions')),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Items')),
                ('rarity', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonMoveMethodProse',
            fields=[
                ('pokemon_move_method', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonMoveMethods')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'pokemon_move_method_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonMoves',
            fields=[
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Pokemon')),
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Moves')),
                ('pokemon_move_method', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonMoveMethods')),
                ('level', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pokemon_moves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonShapeProse',
            fields=[
                ('pokemon_shape', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonShapes')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=24, null=True)),
                ('awesome_name', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'pokemon_shape_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonSpeciesFlavorSummaries',
            fields=[
                ('pokemon_species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonSpecies')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('flavor_summary', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'pokemon_species_flavor_summaries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonSpeciesFlavorText',
            fields=[
                ('species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonSpecies')),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Versions')),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('flavor_text', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'pokemon_species_flavor_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonSpeciesNames',
            fields=[
                ('pokemon_species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonSpecies')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('genus', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'pokemon_species_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonSpeciesProse',
            fields=[
                ('pokemon_species', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.PokemonSpecies')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('form_description', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'pokemon_species_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PokemonStats',
            fields=[
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Pokemon')),
                ('stat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Stats')),
                ('base_stat', models.IntegerField()),
                ('effort', models.IntegerField()),
            ],
            options={
                'db_table': 'pokemon_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionNames',
            fields=[
                ('region', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Regions')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'region_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatHintNames',
            fields=[
                ('stat_hint', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.StatHints')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('message', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'stat_hint_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatNames',
            fields=[
                ('stat', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Stats')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'stat_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperContestCombos',
            fields=[
                ('first_move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Moves')),
                ('second_move', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='+', serialize=False, to='teambuilder.Moves')),
            ],
            options={
                'db_table': 'super_contest_combos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperContestEffectProse',
            fields=[
                ('super_contest_effect', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.SuperContestEffects')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('flavor_text', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'super_contest_effect_prose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeEfficacy',
            fields=[
                ('damage_type', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Types')),
                ('target_type', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='+', to='teambuilder.Types')),
                ('damage_factor', models.IntegerField()),
            ],
            options={
                'db_table': 'type_efficacy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeNames',
            fields=[
                ('type', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Types')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'type_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionGroupPokemonMoveMethods',
            fields=[
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('pokemon_move_method', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.PokemonMoveMethods')),
            ],
            options={
                'db_table': 'version_group_pokemon_move_methods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionGroupRegions',
            fields=[
                ('version_group', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.VersionGroups')),
                ('region', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Regions')),
            ],
            options={
                'db_table': 'version_group_regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionNames',
            fields=[
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='teambuilder.Versions')),
                ('local_language', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, to='teambuilder.Languages')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'version_names',
                'managed': False,
            },
        ),
    ]
